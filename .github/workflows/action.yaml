name: CI/CD Pipeline

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  # schedule:
  #   - cron: "0 0 * * 1-5" # todos os dias úteis às 00:00
  repository_dispatch:
    types: [contentful-update]

jobs:
  npm-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .

  prettier:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run Prettier
        run: npm run prettier
        working-directory: .

  npm-eslint:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run ESLint
        run: npm run lint
        working-directory: .

  tests:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run tests
        run: npm test
        working-directory: .

  build:
    runs-on: ubuntu-latest
    needs: [prettier, npm-eslint, tests]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run build
        run: npm run build
        working-directory: .

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Deploy to Netlify
        run: npx netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod --dir=.next
        working-directory: .
