name: CI/CD Pipeline

on:
  push:
    branches: ["master", "main"]
  pull_request:
    branches: ["master", "main"]
  # schedule:
  #   - cron: "0 0 * * 1-5" # todos os dias úteis às 00:00
  repository_dispatch:
    types: [contentful-update]

jobs:
  npm-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .

  prettier:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run Prettier
        run: npm run prettier
        working-directory: .

  npm-eslint:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run ESLint
        run: npm run lint
        working-directory: .

  tests:
    runs-on: ubuntu-latest
    needs: [npm-install]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .
      - name: Run tests
        run: npm test
        working-directory: .

  build:
    runs-on: ubuntu-latest
    needs: [prettier, npm-eslint, tests]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Debug environment
        run: |
          echo "SPACE ID: $CONTENTFUL_SPACE_ID"
          echo "ENVIRONMENT: $CONTENTFUL_ENVIRONMENT"
          echo "ACCESS TOKEN length: ${#CONTENTFUL_ACCESS_TOKEN}"
          echo "Testing Contentful GraphQL endpoint..."
          curl -s -o response.txt -w "%{http_code}" \
            -X POST "https://graphql.contentful.com/content/v1/spaces/${CONTENTFUL_SPACE_ID}/environments/${CONTENTFUL_ENVIRONMENT}" \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${CONTENTFUL_ACCESS_TOKEN}" \
            -d '{"query":"{ postCollection(limit:1){items{title}} }"}'
          echo ""
          echo "Response:"
          cat response.txt

      - name: Run build
        run: npm run build
        working-directory: .
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ secrets.CONTENTFUL_ENVIRONMENT || 'main' }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci
        working-directory: .

      - name: Install Netlify
        run: npm install -g netlify-cli
        working-directory: .

      - name: Deploy to Netlify
        run: npx netlify deploy --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }} --prod --dir=.next
        env:
          CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
          CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
          CONTENTFUL_PREVIEW_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_PREVIEW_ACCESS_TOKEN }}
          CONTENTFUL_ENVIRONMENT: ${{ secrets.CONTENTFUL_ENVIRONMENT || 'main' }}
          working-directory: .
