image: node:18

stages:
  - install
  - format
  - lint
  - test
  - build
  - deploy

cache:
  key: ${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/

variables:
  CI_NODE_VERSION: "18"

# 1️⃣ Instala dependências
npm-install:
  stage: install
  script:
    - npm ci
  cache:
    key: ${CI_PROJECT_ID}-${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  artifacts:
    paths:
      - node_modules/
    expire_in: 1h
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# 2️⃣ Formatação com Prettier
prettier:
  stage: format
  needs: [npm-install]
  script:
    - npm run prettier
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# 3️⃣ Lint do código
npm-eslint:
  stage: lint
  needs: [npm-install]
  script:
    - npm run lint
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# 4️⃣ Testes automáticos
tests:
  stage: test
  needs: [npm-install]
  script:
    - npm test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# 5️⃣ Build do projeto
build:
  stage: build
  needs:
    - job: prettier
      optional: true
    - job: npm-eslint
      optional: true
    - job: tests
      optional: true
  script:
    - npm run build
  variables:
    CONTENTFUL_SPACE_ID: $CONTENTFUL_SPACE_ID
    CONTENTFUL_ACCESS_TOKEN: $CONTENTFUL_ACCESS_TOKEN
    CONTENTFUL_PREVIEW_ACCESS_TOKEN: $CONTENTFUL_PREVIEW_ACCESS_TOKEN
    CONTENTFUL_ENVIRONMENT: $CONTENTFUL_ENVIRONMENT
  artifacts:
    paths:
      - .next/
    expire_in: 1h
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'

# 6️⃣ Deploy para Netlify
deploy:
  stage: deploy
  needs:
    - job: build
      optional: true
  script:
    - npm install -g netlify-cli
    - npx netlify deploy --prod --dir=.next
  variables:
    NETLIFY_AUTH_TOKEN: $NETLIFY_AUTH_TOKEN
    NETLIFY_SITE_ID: $NETLIFY_SITE_ID
  environment:
    name: production
    url: https://tdw-mp1-gustavo-silva.netlify.app
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
    - if: '$CI_PIPELINE_SOURCE == "trigger"'
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
